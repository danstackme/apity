#!/usr/bin/env tsx
import { writeFileSync, mkdirSync, existsSync } from "fs";
import { resolve, dirname } from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

export function generateTypes() {
  try {
    const typesFile = `// Generated by @danstackme/apity
// Do not edit this file manually

export type ApiTree = {
  // Your API endpoints will be defined here
};
`;

    const generatedDir = resolve(process.cwd(), "src/generated");
    if (!existsSync(generatedDir)) {
      mkdirSync(generatedDir, { recursive: true });
    }

    writeFileSync(resolve(generatedDir, "apiTree.gen.ts"), typesFile);
    console.log("âœ¨ Generated API types");
  } catch (error) {
    console.error("Failed to generate types:", error);
    if (process.argv[1] === resolve(__dirname, "generate.js")) {
      process.exit(1);
    }
  }
}

// Only run if this is the main module
if (process.argv[1] === resolve(__dirname, "generate.js")) {
  generateTypes();
}
