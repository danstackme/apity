#!/usr/bin/env tsx
import { execSync } from "child_process";
import { readFileSync, writeFileSync } from "fs";
import { resolve } from "path";

export function generateTypes() {
  try {
    // Read the package.json to get the name of the project
    const packageJson = JSON.parse(
      readFileSync(resolve(process.cwd(), "package.json"), "utf-8")
    );

    // Generate the types file
    const typesContent = `// Generated by @danstackme/apity
import type { ApiRouteDefinition } from "@danstackme/apity";

export type ApiTree = ApiRouteDefinition;
`;

    // Write the types file
    writeFileSync(
      resolve(process.cwd(), "src/generated/apiTree.gen.ts"),
      typesContent
    );

    console.log("✅ Generated API types successfully!");
  } catch (error) {
    console.error("❌ Failed to generate API types:", error);
    if (process.argv[1] === resolve(__dirname, "generate.js")) {
      process.exit(1);
    }
    throw error;
  }
}

// Only run if this is the main module
if (process.argv[1] === resolve(__dirname, "generate.js")) {
  generateTypes();
}
